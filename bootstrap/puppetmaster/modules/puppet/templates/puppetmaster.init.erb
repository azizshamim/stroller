#! /bin/sh
### BEGIN INIT INFO
# Provides:          puppetmaster
# Required-Start:    $network $named $remote_fs $syslog
# Required-Stop:     $network $named $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/puppet
DAEMON_OPTS=""
NAME=master
DESC="puppet master"

test -x $DAEMON || exit 0

[ -r /etc/default/puppetmaster ] && . /etc/default/puppetmaster

. /lib/lsb/init-functions

set -e

is_true() {
    if [ "x$1" = "xtrue" -o "x$1" = "xyes" -o "x$1" = "x0" ] ; then
        return 0
    else
        return 1
    fi
}

start_puppet_master() {
start-stop-daemon --start --quiet --pidfile <%= puppet['rundir'] %>/${NAME}.pid \
  --startas $DAEMON -- $NAME $DAEMON_OPTS --masterport=$PORT
}

stop_puppet_master() {
  start-stop-daemon --stop --quiet --oknodo --pidfile <%= puppet['rundir'] %>/${NAME}.pid
}

status_puppet_master() {
  status_of_proc -p "<%= puppet['rundir'] %>/${NAME}.pid" "${DAEMON}" "${NAME}"
}


case "$1" in
  start)
    log_begin_msg "Starting $DESC"
    start_puppet_master
    log_end_msg $?
  ;;
  stop)
    log_begin_msg "Stopping $DESC"
    stop_puppet_master
    log_end_msg $?
 ;;
  reload)
  ;;
  status)
  status_puppet_master
  ;;
  restart|force-reload)
    log_begin_msg "Restarting $DESC"
    stop_puppet_master
    sleep 1
    start_puppet_master
    log_end_msg $?
  ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|force-reload}" >&2
    exit 1
  ;;
esac
